(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{349:function(t,i,a){"use strict";a.r(i);var l=a(17),n=Object(l.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"时间复杂度"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),i("p",[t._v("算法的时间复杂度是一个函数，它定性描述该算法的运行时间。这是一个代表算法输入值的字符串的长度的函数。时间复杂度常用大O符号(Big O notation)表述，不包括这个函数的低阶项和首项系数。")]),t._v(" "),i("h2",{attrs:{id:"常见的时间复杂度"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#常见的时间复杂度"}},[t._v("#")]),t._v(" 常见的时间复杂度")]),t._v(" "),i("ol",[i("li",[t._v("O(1): Constant Complexity 常数复杂度")]),t._v(" "),i("li",[t._v("O(log n): Logarithmic Complexity 对数复杂度")]),t._v(" "),i("li",[t._v("O(n): Linear Complexity 线性时间复杂度")]),t._v(" "),i("li",[t._v("O(n^2): N square Complexity 平方复杂度")]),t._v(" "),i("li",[t._v("O(n^3): N cubic Complexity 立方复杂度")]),t._v(" "),i("li",[t._v("O(2^n): Exponential Complextiy 指数复杂度")]),t._v(" "),i("li",[t._v("O(n!): Factorial 阶乘")])])])}),[],!1,null,null,null);i.default=n.exports}}]);