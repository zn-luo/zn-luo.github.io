(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{367:function(e,r,t){"use strict";t.r(r);var a=t(17),n=Object(a.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"mongodb索引机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mongodb索引机制"}},[e._v("#")]),e._v(" MongoDB索引机制")]),e._v(" "),r("h2",{attrs:{id:"索引机制中常见的术语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引机制中常见的术语"}},[e._v("#")]),e._v(" 索引机制中常见的术语")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Index: 索引")])]),e._v(" "),r("li",[r("p",[e._v("Key: 键")])]),e._v(" "),r("li",[r("p",[e._v("DataPage: 数据页")])]),e._v(" "),r("li",[r("p",[e._v("Fetch: 抓取")])]),e._v(" "),r("li",[r("p",[e._v("Covered Query: 查询覆盖（是指所需要的字段都在索引中，不需要额外的字段，就可以不再需要从数据页中加载数据）")])]),e._v(" "),r("li",[r("p",[e._v("IXSCAN: 索引扫描")])]),e._v(" "),r("li",[r("p",[e._v("COLLSCAN: 集合扫描")])]),e._v(" "),r("li",[r("p",[e._v("Index Prefix: 索引前缀(当创建复合索引时，会有索引前缀)\n如: db.user.createIndex({firstName:1, lastName:1, gender:1, age: 1})"),r("br"),e._v("\n则此索引的前缀有："),r("br"),e._v("\n{firstName:1}"),r("br"),e._v("\n{firstName:1, lastName:1}"),r("br"),e._v("\n{firstName:1, lastName:1, gender:1}"),r("br"),e._v("\n查询条件命中此索引的前缀，该索引也会生效，所以不需要过多地创建索引")])]),e._v(" "),r("li",[r("p",[e._v("Selectivity: 过滤性"),r("br"),e._v("\n如在一个有10000条记录的集合中有：")]),e._v(" "),r("ol",[r("li",[e._v("满足gender=F的记录有4000条")]),e._v(" "),r("li",[e._v("满足city=SZ的记录有1000条")]),e._v(" "),r("li",[e._v("满足ln=parker的记录有100条")])]),e._v(" "),r("p",[e._v("条件ln能过滤掉最多的数据，city其次，gender最少。所以ln的过滤性大于city大于gender。"),r("br"),e._v("\n所以假设要给条件gender==F && city== SZ && ln ==parker建索引的话，"),r("br"),e._v("\n应该是:db.user.createIndex({ln:1, city: 1, gender:1})")])])]),e._v(" "),r("h2",{attrs:{id:"索引的工作原理-b-树结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引的工作原理-b-树结构"}},[e._v("#")]),e._v(" 索引的工作原理：B-树结构")])])}),[],!1,null,null,null);r.default=n.exports}}]);