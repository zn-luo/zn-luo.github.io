(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{396:function(a,t,s){"use strict";s.r(t);var e=s(17),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"calico网络故障-bird-is-not-ready"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#calico网络故障-bird-is-not-ready"}},[a._v("#")]),a._v(" calico网络故障(BIRD is not ready)")]),a._v(" "),t("p",[a._v("kubekey部署k8s集群,calico网络插件使用BGP协议建立的网络插件无法正常工作"),t("br"),a._v("\n备注：BGP协议为边界网关协议")]),a._v(" "),t("h2",{attrs:{id:"问题现象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题现象"}},[a._v("#")]),a._v(" 问题现象")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("现象如图")]),a._v(" "),t("p",[t("img",{attrs:{src:"/imgs/k8s/describe-pod1.png",alt:"calico未准备好"}}),t("br"),a._v(" "),t("img",{attrs:{src:"/imgs/k8s/get-pod1.png",alt:"calico未准备好"}})])]),a._v(" "),t("li",[t("p",[a._v("解析：")]),a._v(" "),t("p",[a._v("calico/node is not ready: BIRD is not ready: BGP not established with 172.21.0.1"),t("br"),a._v("\ncalico未准备好，BGP协议不能与172.21.0.1 IP地址连接"),t("br"),a._v("\n而在实际的网卡IP网段中并没有172.21.0.1这个IP，说明calico没有正常地探测到节点实际的网卡名称"),t("br"),a._v("\n所以需要调整calicao网络插件的网卡发现机制，修改IP_AUTODETECTION_METHOD的value值")])])]),a._v(" "),t("h2",{attrs:{id:"解决方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[a._v("#")]),a._v(" 解决方法")]),a._v(" "),t("p",[a._v("calicao网络插件的ip识别策略没有额外配置的情况下默认为first-found，这容易导致一个网络异常的ip作为nodeIP被注册，从而影响node之间的网络连接。"),t("br"),a._v("\n可以修改成can-reach或者interface的策略，尝试连接某一个Ready的node的IP，以此选择出正确的IP")]),a._v(" "),t("p",[a._v("我使用的是kubeky部署工具，在kk二进制执行工具的当前目录有个kubekey目录，里面有个network-plugin.yaml，添加IP_AUTODETECTION_METHOD配置参数"),t("br"),a._v("\n如果是直接手动使用k8s命令部署时，配置文件名为calico.yaml,同样添加IP_AUTODETECTION_METHOD配置参数")]),a._v(" "),t("p",[a._v("如下所示：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("..\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Cluster type to identify the deployment type")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" CLUSTER_TYPE\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"k8s,bgp"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" IP_AUTODETECTION_METHOD       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#新添加的配置参数")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"interface=ens192"')]),a._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#ens192改为实际网卡名称")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Auto-detect the BGP IP address.")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" IP\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"autodetect"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Enable IPIP")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" CALICO_IPV4POOL_IPIP\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Always"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("...")]),a._v("\n")])])]),t("p",[a._v("执行如下命令让修改生效：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" kubekey/network-plugin.yaml 或者 kubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" calico.yaml\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);